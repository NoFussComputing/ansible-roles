
.conventional_commit:
    variables:
        GIT_STRATEGY: none
    image: python:3.6-slim
    stage: validation
    before_script:
        - export PYTHON_VERSION=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`
        - apt update
        - apt install --no-install-recommends -y git
        - python3 -m venv env
        - . env/bin/activate
        - pip install --upgrade pip
        - pip install python-gitlab
        - pip install commitizen
        - target_branch=$(./CI/commitizen/scripts/commit.py --token $API_RO --project $CI_PROJECT_ID --branch $CI_COMMIT_BRANCH --target-branch)
        - echo "[DEBUG] Target Branch[$target_branch]"
        - git clone --depth 150 -b $target_branch $CI_REPOSITORY_URL check
        - cd check
        - git remote rm origin
        - git remote add origin $CI_REPOSITORY_URL
        #- git fetch --all
        - git status
        - git checkout --track origin/$CI_COMMIT_BRANCH
        #- git checkout origin/$CI_COMMIT_BRANCH
        - git status
        - git reset --hard
        - git status
        - first_sha1=$(git log $target_branch..$CI_COMMIT_BRANCH --format=format:%H | tail -1)
        - echo "[DEBUG] First Commit SHA[$first_sha1]"
    after_script:
        - mv cz_output.log ../cz_output.log
        - cd ..
        - rm -Rf check
    artifacts:
        expire_in: 3 days
        when: always
        paths:
            - "*.junit.xml"
            - "*.log"
        reports:
            junit:
                - "*.junit.xml"
    rules:
      - if: '$CI_COMMIT_BRANCH == "master"'
        when: never
      - if: '$CI_COMMIT_BRANCH'
        when: always
      - when: never


MR Title:
    extends:
        - .conventional_commit
    script:
        - cz_exit=0 && cz check --message "$(./CI/commitizen/scripts/commit.py --token $API_RO --project $CI_PROJECT_ID --title --branch $CI_COMMIT_BRANCH)" > cz_output.log 2>&1 || cz_exit=$?
        - . ./CI/commitizen/scripts/cz_junit.sh > ../cz.junit.xml


Commit Messages:
    extends:
        - .conventional_commit
    script:
        - cz_exit=0 && cz check --rev-range $first_sha1..HEAD > cz_output.log 2>&1 || cz_exit=$?
        - . ./CI/commitizen/scripts/cz_junit.sh > ../cz.junit.xml


