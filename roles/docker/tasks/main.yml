
  - name: "Docker Install check"
    shell: "dpkg -s docker-ce &> /dev/null | echo $?"
    register: intrim_docker_installed
    when: ansible_os_family == 'Debian'
    tags:
      - prepare


  - name: "register 'docker_installed' for prepare task"
    shell: "echo docker installed"
    register: docker_installed
    when: "ansible_os_family == 'Debian' and intrim_docker_installed.rc == 0"
    tags:
      - prepare


  - name: "Install common Python modules"
    pip:
      name: "{{ pip_packages }}"
      state: present
    vars:
      pip_packages:
        - docker
    when: ansible_os_family == 'Debian'
    tags:
      - configure
      - install
      - prepare


  - name: "Docker Repository key - 'Ubuntu'"
    apt_key:
      id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    when: ansible_distribution == 'Ubuntu'
    tags:
      - configure
      - install
      - prepare


  - name: "Docker Repository key - 'Debian'"
    apt_key:
      id: "8D81803C0EBFCD88"
      url: https://download.docker.com/linux/debian/gpg
      state: present
    when: ansible_distribution == "Debian"
    tags:
      - configure
      - install
      - prepare


  - name: "Docker Registry Available - 'Ubuntux 86_64'"
    apt_repository: 
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
      state: present
      filename: docker
    when: ansible_architecture == "x86_64" and ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'
    tags:
      - configure
      - install
      - prepare


  - name: "Docker Registry Available - 'Ubuntu aarch64'"
    apt_repository: 
      repo: "deb [arch=arm64] https://download.docker.com/linux/ubuntu bionic stable" 
      state: present
      filename: docker
    when: ansible_architecture == "aarch64" and ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'
    tags:
      - configure
      - install
      - prepare


  - name: "Docker Registry Available - 'Debian stretch x86_64'"
    apt_repository: 
#      repo: "deb [arch=arm64] https://download.docker.com/linux/ubuntu bionic stable" 
      repo: "deb [arch=amd64] https://download.docker.com/linux/debian stretch stable"
      state: present
      filename: docker
    when: ansible_architecture == "x86_64" and ansible_distribution == 'Debian' and ansible_distribution_release == 'stretch'
    tags:
      - configure
      - install
      - prepare


  - name: "Docker Registry Available - 'Debian 10 (Buster) x86_64'"
    apt_repository: 
      repo: "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
      state: present
      filename: docker
    when: ansible_architecture == "x86_64" and ansible_distribution == 'Debian' and ansible_distribution_release == 'buster'
    tags:
      - configure
      - install
      - prepare


  - name: "Install Docker and it's dependecies"
    apt: 
      force_apt_get: true
      name: "{{ packages }}"
      state: present
      update_cache: yes
      install_recommends: false
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli
      - containerd.io
      - docker-compose
    register: docker_installed
    when: ansible_os_family == "Debian"
    tags:
      - configure
      - install


  - name: "Docker service - 'Started'"
    service:
      name: docker
      state: started
    when: ansible_os_family == "Debian"
    tags:
      - configure
      - install

  - name: "logrotate config - 'docker container logs'"
    template:
      src: logrotate-Docker_containers.j2
      dest: "/etc/logrotate.d/ansible-docker_container_logs"
      owner: root
      mode: 0644
      force: yes
    when: logrotate_installed is defined and docker_installed is defined
    tags:
      - configure
      - install
